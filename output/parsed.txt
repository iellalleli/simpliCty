INTEGER IDENTIFIER SEMICOLON TYPE_STRING IDENTIFIER SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count SEMICOLON TYPE_STRING IDENTIFIER SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; TYPE_STRING IDENTIFIER SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING IDENTIFIER SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , TYPE_INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER IDENTIFIER RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b RIGHT_PAREN SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) SEMICOLON TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; TYPE_INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER KW_MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN LEFT_PAREN RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF ( IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF ( x REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF ( x > NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF ( x > 0 RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF ( x > 0 ) LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF ( x > 0 ) { KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive RIGHT_PAREN SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) SEMICOLON RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } RIGHT_CURLY 
INTEGER count ; STRING message ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) ; INTEGER MAIN ( ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } } 
Parsing successful!

Parsed Tree:
342825280,332,SIMPLICITY
342825280,342825280,DECL_STMT
342824272,342825280,VAR_DECL
342824272,342824272,TYPE_INTEGER
342824272,342824272,ID_LIST
342855280,342824272,IDENTIFIER
342855280,342824272,SEMICOLON
342855280,342825280,DECL_STMT
342855280,342855280,VAR_DECL
342819152,342855280,TYPE_STRING
342819152,342855280,ID_LIST
342819152,342819152,IDENTIFIER
0,342855280,SEMICOLON
0,342825280,DECL_STMT
0,0,ARR_DECL
0,0,TYPE_INTEGER
0,0,IDENTIFIER
0,0,LEFT_BRACKET
0,0,NUM_CONST
0,0,RIGHT_BRACKET
0,0,SEMICOLON
0,342825280,DECL_STMT
0,0,FUNC_DECL
342856784,0,TYPE_INTEGER
0,0,IDENTIFIER
342856784,0,LEFT_PAREN
0,0,PARAM_LIST
0,0,PARAM
0,0,TYPE_INTEGER
0,0,IDENTIFIER
0,0,COMMA
0,0,PARAM
0,0,TYPE_INTEGER
0,0,IDENTIFIER
0,0,RIGHT_PAREN
0,0,SEMICOLON
0,342825280,TYPE_INTEGER
0,342825280,MAIN
0,342825280,LEFT_PAREN
0,342825280,RIGHT_PAREN
0,342825280,BLOCK
0,0,LEFT_CURLY
0,0,STMT_LIST
0,0,DECL_STMT
0,0,VAR_DECL
0,0,TYPE_INTEGER
0,0,ID_LIST
0,0,IDENTIFIER
342857120,0,ASSIGN
0,342857120,ASSIGN_OP
0,0,SEMICOLON
0,0,COND_STMT
0,0,IF_STMT
0,0,BOOL_EXP
342826704,0,BOOL_TERM
0,342826704,BOOL_FACTOR
0,0,REL_EXP
0,0,REL_OP
0,0,REL_GT
0,0,ARITH_EXP
0,0,TERM
0,0,FACTOR
0,0,BASE
0,0,NUM_CONST
0,0,BLOCK
0,0,LEFT_CURLY
342826704,0,STMT_LIST
342857120,342826704,OUTPUT_STMT
0,342857120,STD_OUTPUT
0,0,KW_DISPLAY
0,0,LEFT_PAREN
0,0,STR_CONST
0,0,RIGHT_PAREN
0,0,SEMICOLON
0,0,RIGHT_CURLY
0,0,RIGHT_CURLY
