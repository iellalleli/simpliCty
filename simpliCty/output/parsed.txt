INTEGER IDENTIFIER SEMICOLON TYPE_FLOAT IDENTIFIER COMMA IDENTIFIER SEMICOLON TYPE_STRING IDENTIFIER ASSIGN_OP STR_CONST SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count SEMICOLON TYPE_FLOAT IDENTIFIER COMMA IDENTIFIER SEMICOLON TYPE_STRING IDENTIFIER ASSIGN_OP STR_CONST SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; TYPE_FLOAT IDENTIFIER COMMA IDENTIFIER SEMICOLON TYPE_STRING IDENTIFIER ASSIGN_OP STR_CONST SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT IDENTIFIER COMMA IDENTIFIER SEMICOLON TYPE_STRING IDENTIFIER ASSIGN_OP STR_CONST SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x COMMA IDENTIFIER SEMICOLON TYPE_STRING IDENTIFIER ASSIGN_OP STR_CONST SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , IDENTIFIER SEMICOLON TYPE_STRING IDENTIFIER ASSIGN_OP STR_CONST SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y SEMICOLON TYPE_STRING IDENTIFIER ASSIGN_OP STR_CONST SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; TYPE_STRING IDENTIFIER ASSIGN_OP STR_CONST SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING IDENTIFIER ASSIGN_OP STR_CONST SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message ASSIGN_OP STR_CONST SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = STR_CONST SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; TYPE_INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER IDENTIFIER LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers LEFT_BRACKET NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ NUM_CONST RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 RIGHT_BRACKET SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] SEMICOLON TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER IDENTIFIER LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum LEFT_PAREN TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( TYPE_INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER IDENTIFIER COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a COMMA TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , TYPE_INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER IDENTIFIER RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b RIGHT_PAREN LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) LEFT_CURLY TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { TYPE_CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER IDENTIFIER ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a ASSIGN_OP CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = CHAR_CONST SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a SEMICOLON RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; RIGHT_CURLY TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } TYPE_INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER IDENTIFIER LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output LEFT_PAREN TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( TYPE_STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING IDENTIFIER RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello COMMA IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , IDENTIFIER RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name RIGHT_PAREN SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) SEMICOLON KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( STR_WITH_FORMAT COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num COMMA IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , IDENTIFIER RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 RIGHT_PAREN SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) SEMICOLON RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; RIGHT_CURLY TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } TYPE_INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER KW_MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN LEFT_PAREN RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( RW_VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID RIGHT_PAREN LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) LEFT_CURLY NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { NW_LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET TYPE_INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER IDENTIFIER ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x ASSIGN_OP NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = NUM_CONST SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 SEMICOLON KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; KW_IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF LEFT_PAREN IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( IDENTIFIER REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x REL_GT NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > NUM_CONST RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { KW_DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY LEFT_PAREN STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( STR_CONST RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive RIGHT_PAREN SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) SEMICOLON RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; RIGHT_CURLY KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } KW_FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR LEFT_PAREN TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( TYPE_INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER IDENTIFIER ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i ASSIGN_OP IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = IDENTIFIER SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e SEMICOLON IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; IDENTIFIER REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i REL_LT NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < NUM_CONST SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 SEMICOLON IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; IDENTIFIER UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i UNARY_INC RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ RIGHT_PAREN LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ ) LEFT_CURLY KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ ) { KW_DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ ) { DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ ) { DISPLAY ( STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ ) { DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ ) { DISPLAY ( STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ ) { DISPLAY LEFT_PAREN STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ ) { DISPLAY ( STR_WITH_FORMAT COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ ) { DISPLAY ( Count: COMMA IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ ) { DISPLAY ( Count: , IDENTIFIER RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ ) { DISPLAY ( Count: , i RIGHT_PAREN RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ ) { DISPLAY ( Count: , i ) RIGHT_CURLY RIGHT_CURLY 
INTEGER count ; FLOAT x , y ; STRING message = John ; INTEGER numbers [ 10 ] ; INTEGER sum ( INTEGER a , INTEGER b ) { CHARACTER a = a ; } INTEGER output ( STRING name ) { DISPLAY ( hello , name ) ; DISPLAY ( %d, , num , num1 ) ; } INTEGER MAIN ( VOID ) { LET INTEGER x = 5 ; IF ( x > 0 ) { DISPLAY ( Positive ) ; } FOR ( INTEGER i = e ; i < 10 ; i ++ ) { DISPLAY ( Count: , i ) } RIGHT_CURLY 
Parsing successful!

Parsed Tree:
-1675684528,566,SIMPLICITY
-1675684528,-1675684528,DECL_STMT
-1675684528,-1675684528,VAR_DECL
-1675658448,-1675684528,TYPE_INTEGER
-1675658448,-1675684528,ID_LIST
-1675684432,-1675658448,IDENTIFIER
-1675684432,-1675684528,SEMICOLON
-1675684432,-1675684528,DECL_STMT
-1675684432,-1675684432,VAR_DECL
-1675684432,-1675684432,TYPE_FLOAT
-1675658448,-1675684432,ID_LIST
-1675658448,-1675658448,IDENTIFIER
0,-1675658448,COMMA
0,-1675658448,IDENTIFIER
0,-1675684432,SEMICOLON
0,-1675684528,DECL_STMT
0,0,VAR_DECL
0,0,TYPE_STRING
0,0,ID_LIST
0,0,IDENTIFIER
0,0,ASSIGN
0,0,ASSIGN_OP
0,0,STR_CONST
0,0,SEMICOLON
0,-1675684528,DECL_STMT
0,0,ARR_DECL
0,0,TYPE_INTEGER
0,0,IDENTIFIER
0,0,LEFT_BRACKET
0,0,NUM_CONST
0,0,RIGHT_BRACKET
0,0,SEMICOLON
0,-1675684528,FUNC_STMT
0,0,FUNC_DEF
0,0,TYPE_INTEGER
0,0,IDENTIFIER
0,0,LEFT_PAREN
0,0,PARAM_LIST
0,0,PARAM
0,0,TYPE_INTEGER
0,0,IDENTIFIER
-1675642560,0,COMMA
0,0,PARAM
-1675639888,0,TYPE_INTEGER
0,0,IDENTIFIER
0,0,RIGHT_PAREN
0,0,BLOCK
0,0,LEFT_CURLY
0,0,STMT_LIST
0,0,DECL_STMT
0,0,VAR_DECL
0,0,TYPE_CHARACTER
0,0,ID_LIST
0,0,IDENTIFIER
0,0,ASSIGN
0,0,ASSIGN_OP
0,0,CHAR_CONST
0,0,SEMICOLON
0,0,RIGHT_CURLY
-1675639888,-1675684528,FUNC_STMT
-1675639552,-1675639888,FUNC_DEF
0,-1675639552,TYPE_INTEGER
0,-1675639552,IDENTIFIER
0,-1675639552,LEFT_PAREN
0,-1675639552,PARAM_LIST
0,0,PARAM
0,0,TYPE_STRING
0,0,IDENTIFIER
-1675639888,-1675639552,RIGHT_PAREN
-1675640032,-1675639552,BLOCK
0,-1675640032,LEFT_CURLY
0,-1675640032,STMT_LIST
0,0,OUTPUT_STMT
0,0,SEQUENCE_OUTPUT
0,0,KW_DISPLAY
0,0,LEFT_PAREN
0,0,STR_WITH_FORMAT
0,0,COMMA
0,0,OUTPUT_ELEM
0,0,IDENTIFIER
0,0,RIGHT_PAREN
0,0,SEMICOLON
0,0,OUTPUT_STMT
0,0,SEQUENCE_OUTPUT
-1675637248,0,KW_DISPLAY
0,0,LEFT_PAREN
0,0,STR_WITH_FORMAT
0,0,COMMA
0,0,OUTPUT_ELEM
0,0,IDENTIFIER
0,0,COMMA
0,0,OUTPUT_ELEM
0,0,IDENTIFIER
-1675636144,0,RIGHT_PAREN
0,0,SEMICOLON
-1675636144,-1675640032,RIGHT_CURLY
0,-1675684528,TYPE_INTEGER
0,-1675684528,MAIN
0,-1675684528,LEFT_PAREN
0,-1675684528,RW_VOID
0,-1675684528,RIGHT_PAREN
0,-1675684528,BLOCK
-1675637248,0,LEFT_CURLY
0,0,STMT_LIST
0,0,DECL_STMT
0,0,VAR_DECL
0,0,TYPE_INTEGER
0,0,ID_LIST
0,0,IDENTIFIER
0,0,ASSIGN
0,0,ASSIGN_OP
-1675683248,0,SEMICOLON
-1675640032,0,COND_STMT
0,-1675640032,IF_STMT
0,0,BOOL_EXP
0,0,BOOL_TERM
0,0,BOOL_FACTOR
0,0,REL_EXP
0,0,REL_OP
0,0,REL_GT
0,0,ARITH_EXP
0,0,TERM
0,0,FACTOR
0,0,BASE
0,0,NUM_CONST
0,0,BLOCK
0,0,LEFT_CURLY
0,0,STMT_LIST
0,0,OUTPUT_STMT
0,0,STD_OUTPUT
0,0,KW_DISPLAY
0,0,LEFT_PAREN
0,0,STR_CONST
0,0,RIGHT_PAREN
0,0,SEMICOLON
0,0,RIGHT_CURLY
0,0,RIGHT_CURLY
